{
	// Place your AbdelHamid_JINANI workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	
	  "Php class prop const get set": {
		"prefix": "phpFirst",
		"body": [
		  "<?php",
		  "    class $1",
		  "    {",
		  "        // Properties",
		  "        private string $$2;",
		  "",
		  "        // Construct",
		  "        public function __construct(string $$2)",
		  "        {",
		  "            $$this->$2 = $$2;",
		  "        }",
		  "",
		  "        // Get and Set $2",
		  "        public function get$3()",
		  "        {",
		  "            return $$this->$2;",
		  "        }",
		  "        public function set$3($$2)",
		  "        {",
		  "            $$this->$2 = $$2;",
		  "        }",
		  "    }",
		  "?>",
		  ""
		],
		"description": "Starting php"
	  },

	  "Get and set": {
		"prefix": "geAse",
		"body": [
		  "// Get and Set $1",
		  "public function get$2() {",
		  "    return $$this->$1;",
		  "}",
		  "public function set$2($$1) {",
		  "    $$this->$1 = $$1;",
		  "}"
		],
		"description": "getter and setter"
	  }
}